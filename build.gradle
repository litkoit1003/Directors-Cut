plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "directors-cut"
    versionNumber = project.mod_version
    versionType = project.mod_version_type
    uploadFile = jar
    gameVersions = ["1.20.1"]
    loaders = ["fabric"]
    dependencies {
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        required.project "fabric-api"
        required.project "yacl"
        optional.project "modmenu"
    }
}

repositories {
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Gegy"
        url = uri("https://maven.gegy.dev")
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    include(modImplementation("dev.lambdaurora:spruceui:${project.spruceui_version}"))
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "LICENSE_DIRECTORSCUT" }
    }
    from("licenses/SPRUCELICENSE") {
        rename { "LICENSE_SPRUCEUI" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {}
}
